// Auto-generated code. Do not edit.
namespace myTiles {
    //% fixedInstance jres blockIdentity=images._tile
    export const transparency16 = image.ofBuffer(hex``);

    helpers._registerFactory("tilemap", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "level1":
            case "level1":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level4":
            case "level4":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level5":
            case "level5":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level3":
            case "level3":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. 2 2 2 2 2 2 2 2 2 2 2 . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . 2 2 2 . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . 2 2 2 . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . 2 2 2 . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . 2 2 2 . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
`, [myTiles.transparency16,sprites.builtin.forestTiles0,sprites.swamp.swampTile3,sprites.dungeon.collectibleRedCrystal], TileScale.Sixteen);
            case "level6":
            case "level6":return tiles.createTilemap(hex`1000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000`, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level2":
            case "level2":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . 2 2 2 2 2 2 2 2 2 . . . . . 
. . . . . . . . . . 2 2 . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . 2 2 2 2 2 2 . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . 2 2 . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . 2 2 2 . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
`, [myTiles.transparency16,sprites.builtin.forestTiles0,sprites.swamp.swampTile3,sprites.dungeon.collectibleRedCrystal], TileScale.Sixteen);
            case "level8":
            case "level8":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level9":
            case "level9":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level10":
            case "level10":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level12":
            case "level12":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level11":
            case "level11":return tiles.createTilemap(hex`1000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000100000000000000000000000001000001000000000000000000000000010000010000000000000000000000000100000100000000000000000001000001000001000000000000000000010000010000010000000300000100000100000100000101010101000001000001000001000001010101010200010000010000010000010101010101010101010101010101010101010101`, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . 2 . . . . 
. . . . . . . . . . . 2 . . . . 
. . . . . . . . 2 . . 2 . . . . 
. . . . . . . . 2 . . 2 . . . . 
. . . . . . . . 2 . . 2 . . . . 
. . . . . 2 . . 2 . . 2 . . . . 
. . . . . 2 . . 2 . . 2 . . . . 
. . 2 . . 2 . . 2 . . 2 2 2 2 2 
. . 2 . . 2 . . 2 . . 2 2 2 2 2 
. . 2 . . 2 . . 2 . . 2 2 2 2 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
`, [myTiles.transparency16,sprites.builtin.forestTiles0,sprites.swamp.swampTile3,sprites.dungeon.collectibleRedCrystal], TileScale.Sixteen);
            case "level13":
            case "level13":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
2 . . . . . . . . . . . . . . . 
2 . 2 . . . . . . . . . . . . . 
2 . 2 . 2 . . . . . . . . . . . 
2 . 2 . 2 . 2 . . . . 2 2 2 2 2 
2 . 2 . 2 . 2 . . . . . 2 . . . 
2 . 2 . 2 . 2 . . . . . 2 . . . 
2 . 2 . 2 . 2 . . . . . 2 . . . 
2 . 2 . 2 . 2 . . . . . 2 . . . 
2 . 2 . 2 . 2 . . . . . 2 . . . 
2 . 2 . 2 . 2 . . . . . 2 . . . 
2 . 2 . 2 . 2 2 2 2 2 2 2 . . . 
2 . 2 . 2 . 2 2 2 2 2 2 2 . . . 
2 . 2 . 2 . 2 2 2 2 2 2 2 . . . 
2 . . . . . . . . . . . . . . . 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
`, [myTiles.transparency16,sprites.builtin.forestTiles0,sprites.swamp.swampTile3,sprites.dungeon.collectibleRedCrystal], TileScale.Sixteen);
            case "level14":
            case "level14":return tiles.createTilemap(hex``, img`
. . . . . . 2 . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . 2 . . 2 . . . 2 . 
2 . . . . 2 . . . . . . . . . . 
. 2 . . . . . . . . . . . . . . 
. 2 . . 2 . . . 2 . . . . . . . 
. 2 . . . . . . . . . . . 2 . . 
. 2 . 2 . . . . . . 2 . . . . . 
. 2 . . . . 2 . . . . . . . 2 . 
. 2 . . . . . . . . . . . . . . 
. 2 2 2 2 2 2 2 2 2 2 2 . . . . 
. . . . . 2 . . . 2 . . . . . . 
2 . . . . . . . . . . . . . 2 . 
. . . . . . . 2 . . . 2 . . . . 
. . 2 . . 2 2 2 2 2 2 2 2 2 2 . 
2 2 2 2 2 2 . . . . . . . . . . 
`, [myTiles.transparency16,sprites.builtin.forestTiles0,sprites.swamp.swampTile3,sprites.dungeon.collectibleRedCrystal], TileScale.Sixteen);
            case "level15":
            case "level15":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . 2 . 
2 2 2 . . . . 2 . 2 . 2 . . 2 2 
. . 2 . . . 2 . 2 2 2 . 2 . . . 
2 2 2 . . 2 . . . 2 . . . . . . 
. . . . . . . . 2 2 . . . . . . 
. . . . . . . . 2 2 . . 2 2 . . 
. 2 . . . . . 2 2 2 . . . . . . 
. . . . . . 2 2 . 2 . . . . . . 
. . . . . 2 2 . . 2 . . 2 2 . . 
2 2 2 2 2 2 . . . . . . . . . . 
2 2 . . . . . . . . . . . . . . 
. 2 . . 2 2 2 . . . . . 2 2 . . 
2 2 . . 2 . 2 . . . . . . . . . 
. . . . 2 2 2 . . . . . . . . . 
. . . . . . . . . . . . 2 2 . . 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
`, [myTiles.transparency16,sprites.builtin.forestTiles0,sprites.swamp.swampTile3,sprites.dungeon.collectibleRedCrystal], TileScale.Sixteen);
            case "level16":
            case "level16":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
2 . 2 . 2 . . . 2 . . . 2 . . 2 
2 . . . 2 . . . 2 . . . 2 . . 2 
2 . . . 2 . . . 2 . . . 2 . . 2 
2 . . . 2 . . . 2 . . . 2 . . 2 
2 . . . 2 . . . 2 2 2 2 2 . . 2 
2 . . . 2 . . . 2 2 2 2 2 . . 2 
2 . . . 2 . . . 2 2 2 2 2 . . 2 
2 . . . 2 . . . 2 . . . 2 . . 2 
2 . . . 2 . . . 2 . . . 2 . . 2 
2 . . . 2 . . . 2 . . . 2 . . 2 
2 . . . 2 . . . 2 . . . 2 . . 2 
2 . . . 2 . . . 2 . . . 2 . . 2 
2 . . . 2 . . . 2 . . . 2 . . 2 
2 . . . 2 2 2 2 2 . . . 2 . . 2 
`, [myTiles.transparency16,sprites.builtin.forestTiles0,sprites.dungeon.collectibleRedCrystal,sprites.swamp.swampTile3], TileScale.Sixteen);
            case "level17":
            case "level17":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
2 . . . . . . . . 2 . . . . . . 
. . . . . . . . . . . 2 . . . . 
. . . . . . . . . . . . . 2 2 2 
. 2 . . . . . . 2 . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . 2 . 2 2 
. . 2 . . . . 2 . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . 2 . . 2 . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16,sprites.builtin.forestTiles0,sprites.swamp.swampTile3,sprites.dungeon.collectibleRedCrystal], TileScale.Sixteen);
            case "level18":
            case "level18":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level7":
            case "level7":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
2 . . . 2 2 . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . 2 . 2 . 2 . 2 
2 . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
2 . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
2 . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
`, [myTiles.transparency16,sprites.builtin.forestTiles0,sprites.dungeon.collectibleRedCrystal,sprites.swamp.swampTile3], TileScale.Sixteen);
        }
        return null;
    })

    helpers._registerFactory("tile", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "transparency16":return transparency16;
        }
        return null;
    })

}
// Auto-generated code. Do not edit.
